fof(query_0,conjecture,(( s__instance(s__Creature50_1,s__Reptile) ))).
fof(kb_SUMO_UserAssertion_0,axiom,(( (s__subclass(s__Reptile,s__Animal) => ( ? [V__C1, V__C2, V__C3, V__C4, V__C5, V__C6, V__C7, V__C8, V__C9, V__C10] : ((s__instance(V__C1,s__Class) & s__instance(V__C2,s__Class) & s__instance(V__C3,s__Class) & s__instance(V__C4,s__Class) & s__instance(V__C5,s__Class) & s__instance(V__C6,s__Class) & s__instance(V__C7,s__Class) & s__instance(V__C8,s__Class) & s__instance(V__C9,s__Class) & s__instance(V__C10,s__Class) & (s__subclass(V__C1,V__C2) & s__subclass(V__C2,V__C3) & s__subclass(V__C3,V__C4) & s__subclass(V__C4,V__C5) & s__subclass(V__C5,V__C6) & s__subclass(V__C6,V__C7) & s__subclass(V__C7,V__C8) & s__subclass(V__C8,V__C9) & s__subclass(V__C9,V__C10) & s__subclass(V__C10,s__Reptile) & s__instance(s__Creature50_1,V__C1)))))) ))).
fof(kb_SUMO_UserAssertion_1,axiom,(( s__instance(s__Animal,s__Class) ))).
fof(kb_SUMO_UserAssertion_2,axiom,(( s__instance(s__Creature50_1,s__Animal) ))).
